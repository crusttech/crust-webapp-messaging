kind: pipeline
name: "Test & Build"
type: docker

steps:
  - name: Dependencies
    image: cortezaproject/corteza-webapp-builder
    commands: [ "yarn install" ]

  - name: Lint
    image: cortezaproject/corteza-webapp-builder
    commands: [ "yarn lint" ]

  - name: Test
    image: cortezaproject/corteza-webapp-builder
    commands: [ "yarn test:unit" ]

  - name: Build
    image: cortezaproject/corteza-webapp-builder
    commands: [ "yarn build" ]

---

kind: pipeline
name: pack&triggger
type: docker
depends_on: [ "Test & Build" ]
trigger: { ref: [ "refs/heads/master", "refs/heads/beta", "refs/heads/feature-*", "refs/tags/20??.*.*" ] }

steps:
  - name: pack
    image: cortezaproject/corteza-webapp-builder
    volumes: [ { name: webapp-build, path: /var/build} ]
    # produces something like: "corteza-webapp-messaging-master.tar.bz2 "
    commands:  [ "tar -cjf /var/build/$DRONE_REPO_NAME-${DRONE_TAG=${DRONE_BRANCH}}.tar.bz2 -C dist/ ." ]

  - name: trigger
    depends_on: [ 'pack' ]
    image: plugins/downstream
    commands: []
    settings:
      fork: true
      server: https://drone.crust.tech
      token: { from_secret: drone_token }
      params: [ "APP_VERSION=${DRONE_TAG=${DRONE_BRANCH}}" ]
      repositories:
        # Dynamically constructs Drone repo name that will be notified
        #  - namespace (cortezaproject/crusttech),
        - "${DRONE_REPO_NAMESPACE}/${DRONE_REPO_NAME%%-messaging}@${DRONE_BRANCH}"

volumes:
  - name: webapp-build
    host:
      path: /var/build/drone/webapp-build
